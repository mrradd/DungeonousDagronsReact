[{"C:\\workspace\\DungeonousDagronsReact\\dungeonous_dagrons_react\\src\\DataRow.jsx":"1","C:\\workspace\\DungeonousDagronsReact\\dungeonous_dagrons_react\\src\\Datagrid.jsx":"2","C:\\workspace\\DungeonousDagronsReact\\dungeonous_dagrons_react\\src\\InitiativeTracker5e.jsx":"3"},{"size":2391,"mtime":1608073251001,"results":"4","hashOfConfig":"5"},{"size":11477,"mtime":1608075016336,"results":"6","hashOfConfig":"5"},{"size":1896,"mtime":1607892019544,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"vz3ixg",{"filePath":"11","messages":"12","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace\\DungeonousDagronsReact\\dungeonous_dagrons_react\\src\\DataRow.jsx",["15"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/******************************************************************************\r\n* Class DataRow *\r\n* Data for a single row. Allows editing stats, and row selection.\r\n******************************************************************************/\r\nexport default class DataRow extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  /**\r\n   * Handles the change event on the inputs and updates the appropriate state value.\r\n   */\r\n  handleInputChange = (event) => {\r\n    this.props.handleInputChange(this.props.id, event);\r\n  }\r\n\r\n  /**\r\n   * Handles setting the selected id on the parent.\r\n   */\r\n  setSelectedID = () => {\r\n    this.props.setSelectedID(this.props.id);\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <tr style={{backgroundColor: this.props.turnOwner ? 'blue' : 'white'}}>\r\n          <td>\r\n            <button style={{color: this.props.selected ? 'green' : 'black'}} onClick={this.setSelectedID} ><span className=\"material-icons\">face</span></button>\r\n          </td>\r\n          <td>\r\n            <input name=\"name\" value={this.props.name} onChange={this.handleInputChange}/>\r\n          </td>\r\n          <td >\r\n            <input name=\"initiative\" value={this.props.initiative} onChange={this.handleInputChange}/>\r\n          </td>\r\n          <td>\r\n            <input name=\"hp\" value={this.props.hp} onChange={this.handleInputChange}/>\r\n          </td>\r\n          <td>\r\n            <input name=\"ac\" value={this.props.ac} onChange={this.handleInputChange}/>\r\n          </td>\r\n          <td>\r\n            <input name=\"dex\" value={this.props.dex} onChange={this.handleInputChange}/>\r\n          </td>\r\n          <td>\r\n            <input style={{width:\"500px\"}} name=\"notes\" value={this.props.notes} onChange={this.handleInputChange}/>\r\n          </td>\r\n        </tr>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDataRow.propTypes = {\r\n  ac:                PropTypes.number,\r\n  dex:               PropTypes.number,\r\n  handleInputChange: PropTypes.func,\r\n  hp:                PropTypes.number,\r\n  id:                PropTypes.number,\r\n  initiative:        PropTypes.number,\r\n  name:              PropTypes.string,\r\n  notes:             PropTypes.string,\r\n  selected:          PropTypes.bool,\r\n  setSelectedID:     PropTypes.func,\r\n  turnOwner:         PropTypes.bool\r\n}\r\n","C:\\workspace\\DungeonousDagronsReact\\dungeonous_dagrons_react\\src\\Datagrid.jsx",["16","17","18","19","20","21","22","23","24"],"C:\\workspace\\DungeonousDagronsReact\\dungeonous_dagrons_react\\src\\InitiativeTracker5e.jsx",["25","26"],{"ruleId":"27","severity":1,"message":"28","line":9,"column":3,"nodeType":"29","messageId":"30","endLine":11,"endColumn":4},{"ruleId":"31","severity":1,"message":"32","line":88,"column":56,"nodeType":"33","messageId":"34","endLine":88,"endColumn":58},{"ruleId":"31","severity":1,"message":"35","line":103,"column":21,"nodeType":"33","messageId":"34","endLine":103,"endColumn":23},{"ruleId":"31","severity":1,"message":"32","line":105,"column":17,"nodeType":"33","messageId":"34","endLine":105,"endColumn":19},{"ruleId":"31","severity":1,"message":"32","line":105,"column":35,"nodeType":"33","messageId":"34","endLine":105,"endColumn":37},{"ruleId":"31","severity":1,"message":"35","line":115,"column":38,"nodeType":"33","messageId":"34","endLine":115,"endColumn":40},{"ruleId":"31","severity":1,"message":"35","line":138,"column":21,"nodeType":"33","messageId":"34","endLine":138,"endColumn":23},{"ruleId":"31","severity":1,"message":"35","line":167,"column":21,"nodeType":"33","messageId":"34","endLine":167,"endColumn":23},{"ruleId":"31","severity":1,"message":"35","line":303,"column":44,"nodeType":"33","messageId":"34","endLine":303,"endColumn":46},{"ruleId":"31","severity":1,"message":"35","line":331,"column":54,"nodeType":"33","messageId":"34","endLine":331,"endColumn":56},{"ruleId":"36","severity":1,"message":"37","line":42,"column":5,"nodeType":"38","endLine":42,"endColumn":15},{"ruleId":"36","severity":1,"message":"37","line":43,"column":5,"nodeType":"38","endLine":43,"endColumn":15},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]